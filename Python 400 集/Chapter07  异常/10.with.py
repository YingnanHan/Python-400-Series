"""
    finally块由于是否发生异常都会执行，通常我们释放资源的代码。实际上也可以通过with来进行
上下文的管理，更加方便的实现资源释放的工作
    with上下文管理的语法结构如下：
    with context_expr[as var]:
        语句块
    with上下文管理可以自动管理资源，在with代码块执行完毕后自动还原进入改代码之前的线上或者
上下文，不论何种原因跳出with块，不论是否有异常，总能保证资源的正常释放，极大地简化了工作，在
文件操作中，网络通信相关场合非常实用。
"""

# 以打开文件并输出文件内容为例
with open(r"09.常见的异常汇总.py", encoding="utf-8") as f:
    text = f.read()
    print(text)

print("程序执行结束")
