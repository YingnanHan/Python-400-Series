'''
Python 对于类的成员没有严格的访问控制限制，这与其他面向对象语言有区别。关于私有
属性和私有方法，有如下要点：
1. 通常我们约定，两个下划线开头的属性是私有的(private)。其他为公共的(public)。
2. 类内部可以访问私有属性(方法)
3. 类外部不能直接访问私有属性(方法)
4. 类外部可以通过“_类名__私有属性(方法)名”访问私有属性(方法)
【注】方法本质上也是属性！只不过是可以通过()执行而已。所以，此处讲的私有属性和公
有属性，也同时讲解了私有方法和公有方法的用法。如下测试中，同时也包含了私有方法和
公有方法的例子。
'''


class Employee:

    def __init__(self, name, age):
        self.name = name
        self.__age = age  # 将age设置为私有属性，这样在类外部就不能直接访问age了

    def __work(self):  # 定义私有方法
        print("好好工作！！！")
        print("你现在才{0}岁！！！".format(self.__age))  # 值得注意的是在类的内部调用私有属性没有任何的限制


e = Employee("Mike", 18)

print(e.name)
# print(e.age)
print(e._Employee__age)  # 强制调用私有属性的方式  对象名._类名__私有属性名
e._Employee__work()  # 强制调用私有方法的方式 对象名._类名__私有方法名
